# .github/workflows/docker-build.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Configurar Minikube en GitHub Actions
      - name: Setup Minikube
        uses: medyagh/setup-minikube@latest
        with:
          minikube-version: 'latest'
          kubernetes-version: 'v1.21.0'
          driver: docker

      # Cargar la imagen Docker a Minikube
      - name: Load Docker image into Minikube
        run: |
          eval $(minikube -p minikube docker-env)
          docker build -t my-app:latest .

      # Aplicar el archivo de despliegue en Kubernetes (Minikube)
      - name: Deploy to Minikube
        run: |
          kubectl apply -f deployment.yaml
          kubectl rollout status deployment/python-flask-app

      # Verificar que el despliegue es exitoso
      - name: Test the Deployment
        run: |
          kubectl get pods
          kubectl get svc python-flask-service

      # Acceder al servicio en Minikube
      - name: Access Service
        run: |
          minikube service python-flask-service --url